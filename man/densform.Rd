% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cracle_build.R
\name{densform}
\alias{densform}
\title{Generate standard probability density functions for each taxon/variable}
\usage{
densform(ex, clim, bg = 0, name = "", bw = "nrd0", manip = "reg",
  n = 1024)
}
\arguments{
\item{ex}{An object derived from the extraction() function.}

\item{clim}{A raster object (see raster::raster() and raster::stack() documentation for reading raster files into R).}

\item{bg}{An object of background point climate data matching the 
output of extraction(). Generate random backround points and then use extraction().}

\item{name}{A character string describing (preferably) the group for which PDFs are being constructed (i.e., a species binomial). If none is supplied, a value of column "tax" is selected as a default.}

\item{bw}{A bandwidth compatible with stats::density(). Options include "nrd", "nrd0", "ucv", "bcv", etc.. Default (and recommended) value is "nrd0".}

\item{manip}{Character string of 'reg' for straight likelihood, 'condi' for conditional likelihood, or 'bayes' for a Bayesian style likelihood statement.}

\item{n}{Number of equally spaced points at which the probability density is to be estimated. Defaults to 1024. A lower number increases speed but decreases resolution in the function. A higher number increases resolution at the cost of speed. Recommended values: 512, 1024, 2048, ....}
}
\description{
This function takes extracted climate data (from an object generated by the vegdistmod::extraction() function) for one taxon/species and generates probability density functions for variable using both a Gaussian (normal) approximation and a Gaussian Kernel Density estimator.
}
\examples{
#distr <- read.table('test_mat.txt', head=T, sep ="\\t");
data(distr);
data(climondbioclim);
extr.raw = extraction(data=distr, clim= climondbioclim, schema='raw');
extr.sub = subset(extr.raw, extr.raw$tax == extr.raw[5,'tax']);
dens.sub = densform(extr.sub, clim = climondbioclim, bw = 'nrd0', n = 512);
densplot(dens.sub, names(climondbioclim[[1]]));
}

